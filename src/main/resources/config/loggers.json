{
  "log_format": "[${date?number_to_datetime?string[\"yyyy-MM-dd HH:mm:ss\"]}][${category}][${level}] ${message}",
  "verbose_errors": false,
  "loggers": [
    {
      "type": "console"
    },
    {
      "type": "file",
      "directory": "logs",
      "max_file_size": 10000,
      "file_name": "${date?number_to_datetime?string[\"yyyyMMddHHmmss\"]}-${id}.txt"
    }
  ],
  "strings": {
    "bot_start": "Started ${event.bot.username}",
    "bot_stop": "Stopping ${event.bot.username}",
    "old_update": null,
    "new_update": null,
    "plugin_load_error": "An error occurred while loading plugin '${event.plugin}'",
    "plugin_init_error": "An error occurred while initializing plugin '${event.plugin}'",
    "plugin_update_error": "An error occurred while handling an update ${event.update}",
    "plugin_close_error": "An error occurred while disabling plugin '${event.plugin}'",
    "plugin_already_enabled": "Plugin '${event.plugin}' is already enabled",
    "plugin_not_enabled": "Plugin '${event.plugin}' is not enabled",
    "command_received": "${event.input}",
    "command_error": "An error occurred while handling command '${event.input}'",
    "commands_reload_error": "An error occurred while reloading telegram commands",
    "commands": {
      "unknown": {
        "message": "Unknown command '${event.name}'"
      },
      "stop": {
        "message": null
      },
      "enable": {
        "usage": "Usage: ${name} <plugin name>",
        "plugin_enabled": "Plugin '${event.plugin}' is now enabled",
        "plugins_enabled": "Plugins [${event.plugins?join(\", \")}] are now enabled"
      },
      "disable": {
        "usage": "Usage: ${name} <plugin name>",
        "plugin_disabled": "Plugin '${event.plugin}' is now disabled",
        "plugins_disabled": "Plugins [${event.plugins?join(\", \")}] are now disabled"
      },
      "plugins": {
        "message": "Enabled plugins: [${event.enabled?join(\", \")}], Available plugins: [${event.available?join(\", \")}]"
      },
      "reload": {
        "plugin_reloaded": "Plugin '${event.plugin}' successfully reloaded",
        "plugins_reloaded": "Plugins [${event.plugins?join(\", \")}] successfully reloaded"
      },
      "conflict": "Command conflict, please use ${event.plugins?join(\"/ or \")}/ as command prefix"
    }
  }
}