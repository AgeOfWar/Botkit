{
  "bot_start": "Started ${event.bot.username}",
  "bot_stop": "Stopping ${event.bot.username}",
  "old_update": null,
  "new_update": null,
  "plugin_load_error": "An error occurred while loading plugin '${event.plugin}'",
  "plugin_init_error": "An error occurred while initializing plugin '${event.plugin}'",
  "plugin_update_error": "An error occurred while handling an update ${event.update}",
  "plugin_close_error": "An error occurred while disabling plugin '${event.plugin}'",
  "plugin_already_enabled": "Plugin '${event.plugin}' is already enabled",
  "plugin_not_available": "Unknown plugin '${event.plugin}'",
  "plugin_not_enabled": "Plugin '${event.plugin}' is not enabled",
  "command_received": "${event.input}",
  "command_error": "An error occurred while handling command '${event.input}'",
  "commands_reload_error": "An error occurred while reloading telegram commands",
  "plugin_enabled": "Plugin '${event.plugin}' is now enabled",
  "plugins_enabled": "<#if event.plugins?has_content>Plugins [${event.plugins?join(\", \")}] are now enabled<#else>No plugin enabled</#if>",
  "plugin_disabled": "Plugin '${event.plugin}' is now disabled",
  "plugins_disabled": "<#if event.plugins?has_content>Plugins [${event.plugins?join(\", \")}] are now disabled<#else>No plugin disabled</#if>",
  "plugin_reloaded": "Plugin '${event.plugin}' successfully reloaded",
  "plugins_reloaded": "<#if event.plugins?has_content>Plugins [${event.plugins?join(\", \")}] successfully reloaded<#else>No plugin reloaded</#if>",
  "unknown_command": "Unknown command '${event.name}'",
  "show_plugins": "Enabled plugins: [${event.enabled?join(\", \")}], Available plugins: [${event.available?join(\", \")}]",
  "command_conflict": "Command conflict, please use ${event.plugins?join(\"/ or \")}/ as command prefix",
  "show_commands": "List of commands:<#list event.commands?keys as plugin><#list event.commands[plugin]?keys as name>\n${plugin}/${name} - ${event.commands[plugin][name]!}</#list></#list>",
  "show_command": "<#list event.commands?keys as plugin>${plugin}/${event.name} - ${event.commands[plugin]!}<#sep> or </#list>",
  "show_usage": "Usage: ${event.usage}",
  "commands": {
    "stop": "${name}",
    "enable": "${name} <plugin|*>",
    "disable": "${name} <plugin|*>",
    "plugins": "${name}",
    "reload": "${name} [plugin|*]",
    "help": "${name} [command]"
  }
}